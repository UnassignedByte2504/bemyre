"""empty message

Revision ID: d6a6e4963368
Revises: 026a6fc9bd64
Create Date: 2023-02-04 13:39:47.711689

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd6a6e4963368'
down_revision = '026a6fc9bd64'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('band_members', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_musician_info_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('band_members_member_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user_musician_info', ['user_musician_info_id'], ['id'])
        batch_op.drop_column('member_id')

    with op.batch_alter_table('bands', schema=None) as batch_op:
        batch_op.drop_constraint('bands_owner_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user_musician_info', ['owner_id'], ['id'])

    with op.batch_alter_table('musical_instrument', schema=None) as batch_op:
        batch_op.drop_constraint('musical_instrument_user_musical_instruments_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_musical_instruments_id')

    with op.batch_alter_table('user_musical_instrument', schema=None) as batch_op:
        batch_op.add_column(sa.Column('musical_instrument_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'musical_instrument', ['musical_instrument_id'], ['id'])

    with op.batch_alter_table('user_musician_info', schema=None) as batch_op:
        batch_op.drop_column('musical_genres_other')
        batch_op.drop_column('musical_instruments_other')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_musician_info', schema=None) as batch_op:
        batch_op.add_column(sa.Column('musical_instruments_other', sa.VARCHAR(length=80), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('musical_genres_other', sa.VARCHAR(length=80), autoincrement=False, nullable=True))

    with op.batch_alter_table('user_musical_instrument', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('musical_instrument_id')

    with op.batch_alter_table('musical_instrument', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_musical_instruments_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('musical_instrument_user_musical_instruments_id_fkey', 'user_musical_instrument', ['user_musical_instruments_id'], ['id'])

    with op.batch_alter_table('bands', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('bands_owner_id_fkey', 'user_musician_info', ['owner_id'], ['user_id'])

    with op.batch_alter_table('band_members', schema=None) as batch_op:
        batch_op.add_column(sa.Column('member_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('band_members_member_id_fkey', 'user_musician_info', ['member_id'], ['user_id'])
        batch_op.drop_column('user_musician_info_id')

    # ### end Alembic commands ###
